[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-10-07 15:47:27.983340",
  "module": null,
  "name": "Trigger Mail For Supplier When Registration Save",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Supplier Registration",
  "script": "\n\n\n\n\n\n\n\n\nif doc.email:\n    # Dynamic site URL\n    site_url = frappe.utils.get_url()\n    \n    # Pass supplier_name, supplier_group, and email as query parameters\n    supplier_name = doc.supplier_name.replace(\" \", \"%20\")  # URL encode spaces\n    supplier_group = doc.supplier_group.replace(\" \", \"%20\") if doc.supplier_group else \"\"\n    email = doc.email\n    \n    form_link = f\"{site_url}/supplier-registration/new?supplier_name={supplier_name}&supplier_group={supplier_group}&email={email}\"\n    \n    # Compose email\n    subject = \"Complete Your Supplier Registration\"\n    message = f\"\"\"\n    Dear {doc.supplier_name},<br><br>\n    Thank you for registering as a supplier.<br>\n    Please complete your registration by clicking the link below:<br>\n    <a href=\"{form_link}\">Open Supplier Registration Form</a><br><br>\n    Best regards,<br>\n    Your Company\n    \"\"\"\n    \n    frappe.sendmail(\n        recipients=[doc.email],\n        subject=subject,\n        message=message,\n        reference_doctype=doc.doctype,\n        reference_name=doc.name\n    )\n\n\n\n\n\n\n\n\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-10-06 13:00:29.919686",
  "module": null,
  "name": "Trigger Mail For Supplier When RFQ getting Created",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Request for Quotation",
  "script": "if doc.doctype == \"Request for Quotation\":\n    for supplier_row in doc.suppliers:\n        supplier_info = frappe.db.get_value(\n            \"Supplier\", supplier_row.supplier,\n            [\"email_id\", \"supplier_name\"], as_dict=True\n        )\n        if not supplier_info:\n            continue\n\n        supplier_email = supplier_info.email_id\n        supplier_name = supplier_info.supplier_name or supplier_row.supplier\n\n        if supplier_email:\n            # try to get existing user\n            user = frappe.db.get_value(\"User\", {\"email\": supplier_email}, [\"name\"], as_dict=True)\n\n            if not user:\n                # create new user\n                site_url = frappe.utils.get_url()\n                user_doc = frappe.get_doc({\n                    \"doctype\": \"User\",\n                    \"send_welcome_email\": 0,\n                    \"email\": supplier_email,\n                    \"first_name\": supplier_name,\n                    \"user_type\": \"Website User\",\n                    \"redirect_url\": site_url + \"/login\",\n                    \"roles\": [{\"role\": \"Supplier\"}]  # assign Supplier role on creation\n                })\n                user_doc.insert(ignore_permissions=True)\n            else:\n                # existing user\n                user_doc = frappe.get_doc(\"User\", user.name)\n                # check if user has Supplier role\n                has_supplier_role = any(role.role == \"Supplier\" for role in user_doc.roles)\n                if not has_supplier_role:\n                    user_doc.append(\"roles\", {\"role\": \"Supplier\"})\n                    user_doc.save(ignore_permissions=True)\n\n            site_url = frappe.utils.get_url()  # http://localhost:8000\n\n            # generate reset link but don't send default email\n            reset_password_link = user_doc.reset_password(send_email=False)\n            # fix the link to use correct site URL\n            reset_password_link = reset_password_link.replace(frappe.utils.get_url(\"/\"), site_url + \"/\")\n            # generate password reset link every time\n            username = user_doc.email\n            password_info = f'Please set your password using this link: <a href=\"{reset_password_link}\">{reset_password_link}</a>'\n\n\n            login_link = frappe.utils.get_url(\"/login\")\n\n            subject = f\"New RFQ Created: {doc.name}\"\n            message = f\"\"\"\n            <p>Dear {supplier_name},</p>\n            <p>A new Request for Quotation <b>{doc.name}</b> has been created and assigned to you.</p>\n            <p>Please review it at your earliest convenience.</p>\n            <br>\n            <p><b>Login Details:</b><br>\n            Username: {username}<br>\n            {password_info}\n            Login here: <a href=\"{login_link}\">{login_link}</a>\n            </p>\n            <br>\n            <p>Best regards,<br>Excellminds</p>\n            \"\"\"\n\n            frappe.sendmail(\n                recipients=[supplier_email],\n                subject=subject,\n                message=message\n            )\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 1,
  "api_method": "rfq_suppliers_api",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-10-06 12:28:25.883561",
  "module": null,
  "name": "Supplier filtered records",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "def rfq_suppliers_api(supplier_group):\n    suppliers = frappe.get_all(\n        \"Supplier\",\n        filters={\"supplier_group\": supplier_group},\n        fields=[\"name\", \"supplier_name\"]\n    )\n    frappe.response['message'] = suppliers\n    \n\nsupplier_group = frappe.request.form.get(\"supplier_group\")\nrfq_suppliers_api(supplier_group)\n\n",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "get_suppliers_by_item",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-10-06 11:21:20.641457",
  "module": null,
  "name": "Get Supplier list as per item filter",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "def get_suppliers_by_item(item):\n    \"\"\"\n    Get all suppliers linked to a given Item.\n    \"\"\"\n    suppliers = frappe.db.sql(\"\"\"\n        SELECT name, supplier \n        FROM `tabItem Supplier`\n        WHERE parent = %s\n    \"\"\", item, as_dict=True)\n\n    frappe.response['message'] = suppliers\n\n    \nitems = frappe.form_dict.get(\"item\",\"\")\n\nget_suppliers_by_item(items)",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "unlock_rfq_after_submit",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-10-06 12:36:19.574986",
  "module": null,
  "name": "Unlock RFQ after record submitted",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "def unlock_rfq_after_submit(rfq_name):\n    rfq = frappe.get_doc(\"Request for Quotation\", rfq_name)\n    if rfq.docstatus != 1:\n        frappe.throw(\"Only submitted RFQs can be unlocked.\")\n\n    # Instead of a new field â†’ downgrade docstatus temporarily\n    rfq.db_set(\"docstatus\", 0)\n    \n    \n    # Downgrade all child table rows (if needed)\n    # Child table doctype: \"Request for Quotation Item\"\n    for item in rfq.items:  # \"items\" is default fieldname for child table\n        item.db_set(\"docstatus\", 0)  # ensures db reflects draft\n        \n    frappe.response['message'] = True\n\n    \nrfq_name = frappe.form_dict.get(\"rfq_name\",\"\")\n\nunlock_rfq_after_submit(rfq_name)",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-10-07 11:52:39.807249",
  "module": null,
  "name": "Send RFQ mail on submit",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Request for Quotation",
  "script": "if doc.doctype == \"Request for Quotation\":\n    if doc.suppliers:\n        # --- Get Project Managers ---\n        project_managers = []\n\n        if doc.custom_project:\n            try:\n                project = frappe.get_doc(\"Project\", doc.custom_project)\n                # Iterate child table 'users'\n                for u in project.get(\"users\"):\n                    if u.user:\n                        user_doc = frappe.get_doc(\"User\", u.user)\n                        # # Get user roles as a list\n                        roles = [r.role.lower() for r in user_doc.roles]\n\n                        # # if \"Projects Manager\" in roles:\n                        if \"projects manager\" in roles:\n                            project_managers.append({\n                                \"full_name\": user_doc.full_name,\n                                \"mobile_no\": user_doc.mobile_no\n                            })\n            \n            except Exception as e:\n                frappe.log_error(\"Error fetching project managers: \" + str(e))\n\n        # --- Portal link ---\n        portal_link = frappe.utils.get_url(\"/app/request-for-quotation/\" + doc.name)\n\n        # --- Attachments ---\n        attachments = []\n        for f in frappe.get_all(\"File\", filters={\n            \"attached_to_doctype\": \"Request for Quotation\",\n            \"attached_to_name\": doc.name\n        }):\n            file_doc = frappe.get_doc(\"File\", f.name)\n            attachments.append(file_doc.file_url)\n\n        # --- Loop through all suppliers ---\n        for supplier_row in doc.suppliers:\n            supplier_email = supplier_row.supplier_email or frappe.db.get_value(\"Supplier\", supplier_row.supplier, \"email_id\")\n            supplier_name = supplier_row.supplier_name or supplier_row.supplier\n            if not supplier_email:\n                continue\n\n            # Build email body safely using list join\n            html_parts = []\n\n            html_parts.append(\"<p>Dear \" + supplier_name + \",</p>\")\n            html_parts.append(\"<p>Please find below the details of the RFQ.</p>\")\n            html_parts.append(\"<p><strong>Portal Link:</strong> <a href='\" + portal_link + \"'>Click Here</a></p>\")\n            html_parts.append(\"<p><strong>Terms & Conditions:</strong><br>\" + (doc.terms or \"\") + \"</p>\")\n\n            # Items Table\n            if doc.items:\n                html_parts.append(\"<table border='1' cellpadding='5' cellspacing='0'>\")\n                html_parts.append(\"<tr><th>Item</th><th>Qty</th><th>Rate</th><th>Amount</th></tr>\")\n                for item in doc.items:\n                    row = \"<tr>\"\n                    row = row + \"<td>\" + (item.item_name or \"\") + \"</td>\"\n                    row = row +  \"<td>\" + str(item.qty or 0) + \"</td>\"\n                    row = row +  \"<td>\" + str(item.rate or 0) + \"</td>\"\n                    row = row +  \"<td>\" + str(item.amount or 0) + \"</td>\"\n                    row = row +  \"</tr>\"\n                    html_parts.append(row)\n                html_parts.append(\"</table>\")\n\n            # Project Managers Table\n            if project_managers:\n                html_parts.append(\"<p><strong>Project Managers:</strong></p>\")\n                html_parts.append(\"<table border='1' cellpadding='5' cellspacing='0'>\")\n                html_parts.append(\"<tr><th>Name</th><th>Mobile No</th></tr>\")\n                for pm in project_managers:\n                    pm_row = \"<tr>\"\n                    pm_row = pm_row +\"<td>\" + (pm.get(\"full_name\") or \"\") + \"</td>\"\n                    pm_row = pm_row + \"<td>\" + (pm.get(\"mobile_no\") or \"N/A\") + \"</td>\"\n                    pm_row  = pm_row + \"</tr>\"\n                    html_parts.append(pm_row)\n                html_parts.append(\"</table>\")\n\n            html_content = \"\".join(html_parts)\n\n            # --- Send Email ---\n            frappe.sendmail(\n                recipients=[supplier_email],\n                subject=\"RFQ: \" + doc.name,\n                content=html_content,\n                attachments=attachments,\n                now=True\n            )\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-10-07 12:27:19.187522",
  "module": null,
  "name": "Send Mail on Supplier Approval",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Supplier",
  "script": "# Trigger email when supplier is approved\nif doc.workflow_state == \"Approved\" and doc.get_doc_before_save().workflow_state != \"Approved\":\n    supplier_email = doc.email_id or doc.supplier_email or None\n\n    if supplier_email:\n        subject = f\"Supplier Registration Approved â€“ {doc.supplier_name}\"\n\n        message = f\"\"\"\n        <p>Dear {doc.supplier_name},</p>\n        \n        <p>We are pleased to inform you that your supplier registration with <b>{frappe.db.get_single_value('Global Defaults', 'default_company') or 'Reva Process'}</b> has been successfully approved.</p>\n        \n        <p>Thank you for your interest in partnering with us. We look forward to a successful and long-term collaboration.</p>\n        \n        <p>Best regards,<br>\n        {frappe.db.get_single_value('Global Defaults', 'default_company') or 'Procurement Department'}</p>\n        \"\"\"\n\n\n        frappe.sendmail(\n            recipients=[supplier_email],\n            subject=subject,\n            message=message\n        )\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-10-07 13:05:52.615791",
  "module": null,
  "name": "Send Mail On Purchase Order",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Purchase Order",
  "script": "# Trigger email when Purchase Order is approved\nif doc.workflow_state == \"Approved\" and doc.get_doc_before_save().workflow_state != \"Approved\":\n    \n    # Get Supplier Email\n    supplier_doc = frappe.get_doc(\"Supplier\", doc.supplier)\n    contact_email = supplier_doc.contact_email or supplier_doc.email_id\n    \n    # --- Get Project Managers ---\n    project_managers = []\n\n    if doc.project:\n        try:\n            project = frappe.get_doc(\"Project\", doc.project)\n            for u in project.get(\"users\"):\n                if u.user:\n                    user_doc = frappe.get_doc(\"User\", u.user)\n                    roles = [r.role.lower() for r in user_doc.roles]\n                    if \"projects manager\" in roles:\n                        project_managers.append({\n                            \"full_name\": user_doc.full_name,\n                            \"mobile_no\": user_doc.mobile_no\n                        })\n        \n        except Exception as e:\n            frappe.log_error(\"Error fetching project managers: \" + str(e))\n\n\n    if contact_email:\n        subject = f\"Purchase Order Approved â€“ {doc.name}\"\n\n        # Build email message parts\n        html_parts = []\n\n        html_parts.append(f\"\"\"\n        <p>Dear {supplier_doc.supplier_name},</p>\n        <p>We are pleased to inform you that your Purchase Order <b>{doc.name}</b> with <b>{frappe.db.get_single_value('Global Defaults', 'default_company') or 'Reva Process'}</b> has been <b>approved</b>.</p>\n        <p>Order Details:</p>\n        <ul>\n            <li>Purchase Order: {doc.name}</li>\n            <li>Supplier: {supplier_doc.supplier_name}</li>\n            <li>Transaction Date: {doc.transaction_date}</li>\n            <li>Grand Total: {doc.grand_total}</li>\n        </ul>\n        <p>Please take necessary action as per the order.</p>\n        \"\"\")\n\n        # Add Project Managers Table if exists\n        if project_managers:\n            html_parts.append(\"<p><strong>Project Managers:</strong></p>\")\n            html_parts.append(\"<table border='1' cellpadding='5' cellspacing='0'>\")\n            html_parts.append(\"<tr><th>Name</th><th>Mobile No</th></tr>\")\n            for pm in project_managers:\n                html_parts.append(f\"<tr><td>{pm.get('full_name') or ''}</td><td>{pm.get('mobile_no') or 'N/A'}</td></tr>\")\n            html_parts.append(\"</table>\")\n\n        # Closing\n        html_parts.append(f\"\"\"\n        <p>Best regards,<br>\n        {frappe.db.get_single_value('Global Defaults', 'default_company') or 'Procurement Department'}</p>\n        \"\"\")\n\n        # Join all HTML parts into one message\n        message = \"\".join(html_parts)\n\n        # Send email\n        frappe.sendmail(\n            recipients=[contact_email],\n            subject=subject,\n            message=message\n        )\n",
  "script_type": "DocType Event"
 }
]